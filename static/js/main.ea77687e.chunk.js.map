{"version":3,"sources":["components/RoutePointDescriptionField.js","components/RoutePointListItem.js","components/RoutePointList.js","components/MapArea.js","App.js","actions/actionCreators.js","actions/actionTypes.js","serviceWorker.js","store.js","reducers/routePoints.js","reducers/index.js","index.js"],"names":["RoutePointDescriptionField","_ref","classes","value","onChange","onKeyPress","react_default","a","createElement","className","textFieldWrapper","TextField_default","label","variant","fullWidth","defaultProps","withStyles","theme","paddingTop","spacing","unit","paddingLeft","paddingRight","RoutePointListItem","id","description","removeRoutePoint","ListItem_default","listItemContentWrapper","ListItemText_default","primary","primaryTypographyProps","noWrap","ListItemSecondaryAction_default","IconButton_default","aria-label","onClick","Delete_default","SortableElement","minWidth","RoutePointList","routePoints","List_default","map","_ref2","index","components_RoutePointListItem","key","SortableContainer","MapArea","mapCenter","changeMapCenter","moveRoutePoint","react_yandex_maps_umd_production_min","version","query","lang","load","defaultState","center","latitude","longitude","zoom","onBoundsChange","e","apply","Object","toConsumableArray","get","geometry","options","strokeColor","strokeWidth","strokeOpacity","_ref3","properties","balloonContent","draggable","onDrag","concat","getCoordinates","App","state","newRoutePointDescription","routePointDescriptionFieldChangeHandler","target","_this","setState","routePointDescriptionFieldKeyPressHandler","_this$state","addRoutePoint","props","length","Date","getTime","_this$props","this","reorderRoutePoints","_this$state2","Fragment","CssBaseline_default","appRoot","Paper_default","sidebar","components_RoutePointDescriptionField","components_RoutePointList","lockAxis","distance","onSortEnd","oldIndex","newIndex","components_MapArea","mapArea","Component","AppWithStyles","display","height","flex","overflowY","mapDispatchToProps","type","connect","Boolean","window","location","hostname","match","preloadedState","arguments","undefined","filter","task","routePoint","objectSpread","arrayMove","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea77687e.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  textFieldWrapper: {\n    paddingTop: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit,\n    paddingRight: theme.spacing.unit\n  }\n});\n\nconst RoutePointDescriptionField = ({\n  classes,\n  value,\n  onChange,\n  onKeyPress\n}) => (\n  <div className={classes.textFieldWrapper}>\n    <TextField\n      value={value}\n      onChange={onChange}\n      onKeyPress={onKeyPress}\n      label=\"Описание\"\n      variant=\"outlined\"\n      fullWidth\n    />\n  </div>\n);\n\nRoutePointDescriptionField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onKeyPress: PropTypes.func\n};\n\nRoutePointDescriptionField.defaultProps = {\n  value: \"\",\n  onChange: () => {},\n  onKeyPress: () => {}\n};\n\nexport default withStyles(styles)(RoutePointDescriptionField);\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\nimport { SortableElement } from \"react-sortable-hoc\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  listItemContentWrapper: {\n    minWidth: 0,\n    paddingRight: theme.spacing.unit * 2\n  }\n});\n\nconst RoutePointListItem = ({ classes, id, description, removeRoutePoint }) => (\n  <ListItem>\n    <div className={classes.listItemContentWrapper}>\n      <ListItemText\n        primary={description}\n        primaryTypographyProps={{ noWrap: true }}\n      />\n      <ListItemSecondaryAction>\n        <IconButton aria-label=\"Удалить\" onClick={() => removeRoutePoint(id)}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </div>\n  </ListItem>\n);\n\nRoutePointListItem.propTypes = {\n  id: PropTypes.number,\n  description: PropTypes.string,\n  removeRoutePoint: PropTypes.func\n};\n\nRoutePointListItem.defaultProps = {\n  id: 0,\n  description: \"\",\n  removeRoutePoint: () => {}\n};\n\nexport default SortableElement(withStyles(styles)(RoutePointListItem));\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport RoutePointListItem from \"./RoutePointListItem\";\nimport PropTypes from \"prop-types\";\nimport { SortableContainer } from \"react-sortable-hoc\";\n\nconst RoutePointList = ({ routePoints, removeRoutePoint }) => (\n  <List>\n    {routePoints.map(({ id, description }, index) => (\n      <RoutePointListItem\n        index={index}\n        key={id}\n        id={id}\n        description={description}\n        removeRoutePoint={removeRoutePoint}\n      />\n    ))}\n  </List>\n);\n\nRoutePointList.propTypes = {\n  routePoints: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      description: PropTypes.string\n    })\n  ),\n  removeRoutePoint: PropTypes.func\n};\n\nRoutePointList.defaultProps = {\n  routePoints: [],\n  removeRoutePoint: () => {}\n};\n\nexport default SortableContainer(RoutePointList);\n","import React from \"react\";\nimport { Map, Placemark, Polyline, YMaps } from \"react-yandex-maps\";\nimport PropTypes from \"prop-types\";\n\nconst MapArea = ({\n  className,\n  mapCenter,\n  changeMapCenter,\n  routePoints,\n  moveRoutePoint\n}) => (\n  <YMaps version=\"2.1\" query={{ lang: \"ru_RU\", load: \"package.full\" }}>\n    <Map\n      className={className}\n      defaultState={{\n        center: [mapCenter.latitude, mapCenter.longitude],\n        zoom: 10\n      }}\n      onBoundsChange={e => changeMapCenter(...e.get(\"newCenter\"))}\n    >\n      <Polyline\n        geometry={routePoints.map(({ latitude, longitude }) => [\n          latitude,\n          longitude\n        ])}\n        options={{\n          strokeColor: \"#F00\",\n          strokeWidth: 4,\n          strokeOpacity: 0.5\n        }}\n      />\n\n      {routePoints.map(({ id, latitude, longitude, description }) => (\n        <Placemark\n          key={id}\n          geometry={[latitude, longitude]}\n          properties={{ balloonContent: description }}\n          options={{ draggable: true }}\n          onDrag={e =>\n            moveRoutePoint(id, ...e.get(\"target\").geometry.getCoordinates())\n          }\n        />\n      ))}\n    </Map>\n  </YMaps>\n);\n\nMapArea.propTypes = {\n  mapCenter: PropTypes.shape({\n    latitude: PropTypes.number,\n    longitude: PropTypes.number\n  }),\n  routePoints: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n      description: PropTypes.string\n    })\n  ),\n  changeMapCenter: PropTypes.func,\n  moveRoutePoint: PropTypes.func\n};\n\nMapArea.defaultProps = {\n  mapCenter: { latitude: 0, longitude: 0 },\n  routePoints: [],\n  changeMapCenter: () => {},\n  moveRoutePoint: () => {}\n};\n\nexport default MapArea;\n","import React, { Component } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport RoutePointDescriptionField from \"./components/RoutePointDescriptionField\";\nimport RoutePointList from \"./components/RoutePointList\";\nimport MapArea from \"./components/MapArea\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport {\n  addRoutePoint,\n  moveRoutePoint,\n  removeRoutePoint,\n  reorderRoutePoints\n} from \"./actions/actionCreators\";\n\nconst styles = () => ({\n  appRoot: {\n    display: \"flex\",\n    height: \"100vh\"\n  },\n  sidebar: {\n    flex: \"1\",\n    overflowY: \"auto\"\n  },\n  mapArea: {\n    flex: \"3\"\n  }\n});\n\nclass App extends Component {\n  state = {\n    newRoutePointDescription: \"\",\n    mapCenter: { latitude: 55.753575, longitude: 37.62104 }\n  };\n\n  routePointDescriptionFieldChangeHandler = ({ target: { value } }) => {\n    this.setState({\n      newRoutePointDescription: value\n    });\n  };\n\n  routePointDescriptionFieldKeyPressHandler = e => {\n    if (e.key === \"Enter\") {\n      const { newRoutePointDescription, mapCenter } = this.state;\n      const { addRoutePoint } = this.props;\n\n      if (newRoutePointDescription.length > 0) {\n        addRoutePoint(\n          new Date().getTime(),\n          mapCenter.latitude,\n          mapCenter.longitude,\n          newRoutePointDescription\n        );\n        this.setState({ newRoutePointDescription: \"\" });\n      }\n    }\n  };\n\n  changeMapCenter = (latitude, longitude) => {\n    this.setState({\n      mapCenter: { latitude: latitude, longitude: longitude }\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      routePoints,\n      removeRoutePoint,\n      moveRoutePoint,\n      reorderRoutePoints\n    } = this.props;\n    const { newRoutePointDescription, mapCenter } = this.state;\n\n    return (\n      <>\n        <CssBaseline />\n        <div className={classes.appRoot}>\n          <Paper className={classes.sidebar}>\n            <RoutePointDescriptionField\n              value={newRoutePointDescription}\n              onChange={this.routePointDescriptionFieldChangeHandler}\n              onKeyPress={this.routePointDescriptionFieldKeyPressHandler}\n            />\n\n            <RoutePointList\n              routePoints={routePoints}\n              removeRoutePoint={removeRoutePoint}\n              lockAxis=\"y\"\n              distance={2}\n              onSortEnd={({ oldIndex, newIndex }) =>\n                reorderRoutePoints(oldIndex, newIndex)\n              }\n            />\n          </Paper>\n\n          <MapArea\n            className={classes.mapArea}\n            mapCenter={mapCenter}\n            changeMapCenter={this.changeMapCenter}\n            routePoints={routePoints}\n            moveRoutePoint={moveRoutePoint}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nconst AppWithStyles = withStyles(styles)(App);\n\nconst mapStateToProps = ({ routePoints }) => ({ routePoints });\nconst mapDispatchToProps = {\n  addRoutePoint,\n  removeRoutePoint,\n  moveRoutePoint,\n  reorderRoutePoints\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AppWithStyles);\n","import {\n  ADD_ROUTE_POINT,\n  MOVE_ROUTE_POINT,\n  REMOVE_ROUTE_POINT,\n  REORDER_ROUTE_POINTS\n} from \"./actionTypes\";\n\nexport const addRoutePoint = (id, latitude, longitude, description) => ({\n  type: ADD_ROUTE_POINT,\n  id,\n  latitude,\n  longitude,\n  description\n});\n\nexport const removeRoutePoint = id => ({\n  type: REMOVE_ROUTE_POINT,\n  id\n});\n\nexport const moveRoutePoint = (id, latitude, longitude) => ({\n  type: MOVE_ROUTE_POINT,\n  id,\n  latitude,\n  longitude\n});\n\nexport const reorderRoutePoints = (oldIndex, newIndex) => ({\n  type: REORDER_ROUTE_POINTS,\n  oldIndex,\n  newIndex\n});\n","export const ADD_ROUTE_POINT = \"ADD_ROUTE_POINT\";\nexport const REMOVE_ROUTE_POINT = \"REMOVE_ROUTE_POINT\";\nexport const MOVE_ROUTE_POINT = \"MOVE_ROUTE_POINT\";\nexport const REORDER_ROUTE_POINTS = \"REORDER_ROUTE_POINTS\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, compose } from \"redux\";\nimport rootReducer from \"./reducers/index\";\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n/* eslint-enable */\n\nconst configureStore = preloadedState =>\n  createStore(rootReducer, preloadedState, composeEnhancers());\n\nconst store = configureStore({});\n\nexport default store;\n","import {\n  ADD_ROUTE_POINT,\n  MOVE_ROUTE_POINT,\n  REMOVE_ROUTE_POINT,\n  REORDER_ROUTE_POINTS\n} from \"../actions/actionTypes\";\nimport { arrayMove } from \"react-sortable-hoc\";\n\nconst routePoints = (\n  state = [],\n  { type, id, latitude, longitude, description, oldIndex, newIndex }\n) => {\n  switch (type) {\n    case ADD_ROUTE_POINT:\n      return [\n        ...state,\n        {\n          id: id,\n          latitude: latitude,\n          longitude: longitude,\n          description: description\n        }\n      ];\n\n    case REMOVE_ROUTE_POINT:\n      return state.filter(task => task.id !== id);\n\n    case MOVE_ROUTE_POINT:\n      return state.map(routePoint =>\n        routePoint.id === id\n          ? { ...routePoint, latitude: latitude, longitude: longitude }\n          : routePoint\n      );\n\n    case REORDER_ROUTE_POINTS:\n      return arrayMove(state, oldIndex, newIndex);\n\n    default:\n      return state;\n  }\n};\n\nexport default routePoints;\n","import { combineReducers } from \"redux\";\nimport routePoints from \"./routePoints\";\n\nconst rootReducer = combineReducers({ routePoints });\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}